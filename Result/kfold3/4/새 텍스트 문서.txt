x = tf.keras.layers.Conv2D(filters=16, kernel_size=(5,1), strides = (1), activation = 'relu', padding='valid', name='CV1')(input)
    x = tf.keras.layers.AveragePooling2D(pool_size = (3,1), strides = (2,1), name='AP1')(x)
    x = tf.keras.layers.Dropout(0.1)(x)
    x = tf.keras.layers.Conv2D(filters=32, kernel_size=(5,1), strides = (1), activation = 'relu', padding='valid', name='CV2')(x)
    x = tf.keras.layers.AveragePooling2D(pool_size = (3,1), strides = (2,1), name='AP2')(x)
    x = tf.keras.layers.Dropout(0.1)(x)
    x = tf.keras.layers.Conv2D(filters=64, kernel_size=(5,1), strides = (1), activation = 'relu', padding='valid', name='CV3')(x)
    x = tf.keras.layers.AveragePooling2D(pool_size = (3,1), strides = (2,1), name='AP3')(x)
    x = tf.keras.layers.Dropout(0.1)(x)
    x = tf.keras.layers.Conv2D(filters=128, kernel_size=(5,1), strides = (1), activation = 'relu', padding='valid', name='CV4')(x)
    x = tf.keras.layers.AveragePooling2D(pool_size = (3,1), strides = (2,1), name='AP4')(x)
    x = tf.keras.layers.Dropout(0.1)(x)
    x = tf.keras.layers.Conv2D(filters=256, kernel_size=(5,1), strides = (1), activation = 'relu', padding='valid', name='CV5')(x)
    x = tf.keras.layers.AveragePooling2D(pool_size = (3,1), strides = (2,1), name='AP5')(x)
    x = tf.keras.layers.Dropout(0.1)(x)